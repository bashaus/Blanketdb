#!/usr/bin/env ruby

require 'rubygems'
require 'yaml'
require 'optparse'
require 'pp'

require 'snapback/options'
require 'snapback/transaction'
require 'snapback/database'
require 'snapback/dsl'

begin
  # Ensure user is root
  if Process.uid != 0 then
    raise "Must run as root"
  end
rescue
  $stderr.puts "#{$!.to_s.red}"
  exit
end

begin
  $options = Snapback::Options.parse(ARGV)

  case $options[:command]
  when "install"
    require "snapback/app/install"
    Snapback::App::Install.instance.go

    puts ""
    exit
  end

  begin
    # Read confirmation options
    $config = YAML.load_file($options[:config])
  rescue
    raise "Could not load configuration file: #{$options[:config]}"
  end

  # Connect to MySQL
  $database = Snapback::Database.instance
  $database.hostname = $config['mysql']['hostname']
  $database.username = $config['mysql']['username']
  $database.password = $config['mysql']['password']
  $database.connect

  case $options[:command]
  when "create"
    require "snapback/app/create"
    Snapback::App::Create.instance.go
  when "snapshot"
    require "snapback/app/snapshot"
    Snapback::App::Snapshot.instance.go
  when "commit"
    require "snapback/app/commit"
    Snapback::App::Commit.instance.go
  when "rollback"
    require "snapback/app/rollback"
    Snapback::App::Rollback.instance.go
  when "drop"
    require "snapback/app/drop"
    Snapback::App::Drop.instance.go
  when "mount"
    require "snapback/app/mount"
    Snapback::App::Mount.instance.go
  when "unmount"
    require "snapback/app/unmount"
    Snapback::App::Unmount.instance.go
  end
rescue
  puts ""
  $stderr.puts "#{$!.to_s.red}"
  puts "Use -v (--verbose) to view entire process".red if !$options[:verbose]
  puts "Rolling back".red
  puts ""

  Snapback::Transaction.instance.do_rollback
end

puts ""